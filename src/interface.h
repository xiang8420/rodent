/* interface.h : Impala interface file generated by impala */
#ifndef INTERFACE_H
#define INTERFACE_H

#ifdef __cplusplus
extern "C" {
#endif

struct Node2 {
    float bounds[12];
    int child[2];
    int pad[2];
};

struct Tri4 {
    float v0[3][4];
    float e1[3][4];
    float e2[3][4];
    float n[3][4];
    int prim_id[4];
    int geom_id[4];
};

struct Vec3 {
    float x;
    float y;
    float z;
};

struct Vec4 {
    float x;
    float y;
    float z;
    float w;
};

struct Settings {
    struct Vec3 eye;
    struct Vec3 dir;
    struct Vec3 up;
    struct Vec3 right;
    float width;
    float height;
    struct Vec4 range;
    int spp_cur;
};

struct RayStream {
    int* id;
    float* org_x;
    float* org_y;
    float* org_z;
    float* dir_x;
    float* dir_y;
    float* dir_z;
    float* tmin;
    float* tmax;
};

struct PrimaryStream {
    struct RayStream rays;
    int* grid_id;
    int* geom_id;
    int* prim_id;
    float* t;
    float* u;
    float* v;
    unsigned int* rnd;
    float* mis;
    float* contrib_r;
    float* contrib_g;
    float* contrib_b;
    int* depth;
    int size;
};

struct Node8 {
    float bounds[6][8];
    int child[8];
    int pad[8];
};

struct Node4 {
    float bounds[6][4];
    int child[4];
    int pad[4];
};

struct SecondaryStream {
    struct RayStream rays;
    int* grid_id;
    int* prim_id;
    float* color_r;
    float* color_g;
    float* color_b;
    int size;
};

struct Tri1 {
    float v0[3];
    int pad;
    float e1[3];
    int geom_id;
    float e2[3];
    int prim_id;
};

int cpu_sort_primary(struct PrimaryStream const* primary, int* ray_begins, int* ray_ends, int num_geometries, int keep_nohit_rays);
int start_COMM(void);
int get_spp(void);
int get_dev_num(void);
int get_chunk_num(void);
void render(struct Settings const* settings, int iter, int dev, int chunk);

#ifdef __cplusplus
}
#endif

#endif /* INTERFACE_H */

